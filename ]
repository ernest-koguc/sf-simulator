<RadzenCard>
    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" class="rz-background-color-base-900" 
    Style="margin: -1rem; margin-bottom: 1rem; padding: 0.5rem; padding-right: 1rem; border-radius: var(--rz-card-border-radius);">
        <RadzenText TextStyle="TextStyle.H5" Text="Result" Style="align-self: center; margin-bottom: 0; padding-left: 1.5rem;"/>
        <div>
            <RadzenButton Click="GoBack" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base"><SfIcon Icon="Load"/><span class="rz-ms-2">Next</span></RadzenButton>
            <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Base"><SfIcon Icon="Load"/><span class="rz-ms-2">Next from now</span></RadzenButton>
        </div>
    </RadzenRow>
    <RadzenTabs RenderMode="TabRenderMode.Client" TabPosition="TabPosition.Left">
        <Tabs>
            <RadzenTabsItem>
                <Template>
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <SfIcon Icon="Quickview"/>
                        <div class="rz-ms-2">
                            Quickview
                        </div>
                    </div>
                </Template>
                <ChildContent>
                    <RadzenStack Style="width: 1000px;">
                        <RadzenRow JustifyContent="JustifyContent.SpaceBetween">
                            <div>
                                Total base: @Result.BaseStat (+@(Result.BaseStat - BeforeSimulation.BaseStat))
                            </div>
                            <div>
                                Level: @Result.Level (+@(Result.Level - BeforeSimulation.Level))
                            </div>
                        </RadzenRow>
                        <hr />
                        <RadzenRow JustifyContent="JustifyContent.SpaceBetween">
                            <RadzenStack class="rz-background-color-base-900 rz-p-4 rz-border-radius-2">
                                <RadzenText TextStyle="TextStyle.H3">Before</RadzenText>
                                <hr />
                                <RadzenText>Level: @BeforeSimulation.Level</RadzenText>
                                <RadzenText>Experience: @BeforeSimulation.Experience</RadzenText>
                                <RadzenText>Base stats: @BeforeSimulation.BaseStat</RadzenText>
                                <RadzenText>Date: @DateTime.Today.ToShortDateString()</RadzenText>
                            </RadzenStack>
                            <RadzenStack class="rz-background-color-base-900 rz-p-4 rz-border-radius-2">
                                <RadzenText TextStyle="TextStyle.H3">After</RadzenText>
                                <hr />
                                <RadzenText TextStyle="TextStyle.DisplayH6">Level: @Result.Level</RadzenText>
                                <RadzenText>Experience: @Result.Experience</RadzenText>
                                <RadzenText>Base stats: @Result.BaseStat</RadzenText>
                                <RadzenText>Date: @DateTime.Today.AddDays(Result.SimulatedDays.Count).ToShortDateString()</RadzenText>
                            </RadzenStack>
                        </RadzenRow>
                    </RadzenStack>
                </ChildContent>
            </RadzenTabsItem>
            <RadzenTabsItem>
                <Template>
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <SfIcon Icon="Chart"/>
                        <div class="rz-ms-2">
                            Charts 
                        </div>
                    </div>
                </Template>
                <ChildContent>
                    <div style="width:1000px">
                        <RadzenChart ColorScheme="ColorScheme.Pastel" Style="width:1000px;">
                            @if (Result is not null)
                            {
                                @foreach (var gain in TotalExperienceGains)
                                {
                                    var data = new List<Gain> { gain };
                                    <RadzenColumnSeries Data="@data" ValueProperty="Value" CategoryProperty="Source" Title="@gain.Source" LineType="LineType.Dashed">
                                        <RadzenColumnOptions Margin="1" Width="30"/>
                                        <RadzenCategoryAxis Padding="200" Visible="false"/>
                                        <RadzenSeriesDataLabels/>
                                        <RadzenValueAxis Formatter="FormatString">
                                            <RadzenGridLines Visible="true"/>
                                        </RadzenValueAxis>
                                        <RadzenLegend/>
                                    </RadzenColumnSeries>
                                }
                            }
                        </RadzenChart>
                    </div>
                    <div style="width:1000px">
                        <RadzenChart ColorScheme="ColorScheme.Pastel" Style="width:1000px;">
                            @if (Result is not null)
                            {
                                @foreach (var gain in TotalBaseStatsGains)
                                {
                                    var data = new List<Gain> { gain };
                                    <RadzenColumnSeries Data="@data" ValueProperty="Value" CategoryProperty="Source" Title="@gain.Source" LineType="LineType.Dashed" >
                                        <RadzenColumnOptions Margin="1" Width="30"/>
                                        <RadzenCategoryAxis Padding="200" Visible="false"/>
                                        <RadzenSeriesDataLabels/>
                                        <RadzenValueAxis Formatter="FormatString">
                                            <RadzenGridLines Visible="true"/>
                                        </RadzenValueAxis>
                                        <RadzenLegend/>
                                    </RadzenColumnSeries>
                                }
                            }
                        </RadzenChart>
                    </div>
                </ChildContent>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</RadzenCard>